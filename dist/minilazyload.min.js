/*!
 * MiniLazyload
 * Copyright (c) Simon Raichl 2019
 * MIT License
 */
var MiniLazyload=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function r(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.r(t),n.d(t,"default",function(){return a});var a=function(){function e(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},n=1<arguments.length?arguments[1]:void 0,r=2<arguments.length?arguments[2]:void 0;!function(t,n){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this),this.selector=n||"[loading=lazy]",this.options=t,this.enabled=!HTMLImageElement.prototype.hasOwnProperty("loading")||r===e.IGNORE_NATIVE_LAZYLOAD,this.update()}return function(e,t,n){t&&o(e.prototype,t),n&&o(e,n)}(e,[{key:"update",value:function(){this.enabled&&this.loadImages(function(){},!1)}},{key:"loadImage",value:function(e){var t=e.dataset,n=t.src,r=t.srcset;n&&(e.src=n),r&&(e.srcset=r),this.translateSrcset(e.parentElement)}},{key:"loadImages",value:function(e,t){var n=this,r=0<arguments.length&&void 0!==e?e:function(){},o=!(1<arguments.length&&void 0!==t)||t;this.allElements.forEach(function(e){n.onEvents(e),r(e),!window.IntersectionObserver||o?n.loadImage(e):n.newObserver.observe(e)})}},{key:"translateSrcset",value:function(e){window.HTMLPictureElement&&e instanceof HTMLPictureElement&&r(e.querySelectorAll("[data-srcset]")).forEach(function(e){e.srcset=e.dataset.srcset})}},{key:"onEvents",value:function(e){function t(){return e.classList.add("loaded")}var n=this.options.placeholder;e.addEventListener("error",function(){n&&-1===e.className.indexOf("error")&&(e.src=n),e.classList.add("error"),e.removeEventListener("load",t)}),e.addEventListener("load",t)}},{key:"newObserver",get:function(){var e=this;return new IntersectionObserver(function(t,n){var r=function(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=[],r=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(r=(i=u.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw a}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}(t,1)[0],o=r.intersectionRatio,a=r.target;0<o&&(n.unobserve(a),e.loadImage(a))},this.options)}},{key:"allElements",get:function(){return r(document.querySelectorAll("img".concat(this.selector,", iframe").concat(this.selector)))}}],[{key:"IGNORE_NATIVE_LAZYLOAD",get:function(){return!0}}]),e}()}]).default;